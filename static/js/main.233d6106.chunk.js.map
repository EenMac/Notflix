{"version":3,"sources":["logo.svg","login/login.js","axios.js","Row.js","Requests.js","Banner.js","Imgs/notflix-img.jpg","Navbar.js","Rows.js","App.js","reportWebVitals.js","index.js"],"names":["Login","instance","axios","create","baseURL","base_url","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","undefined","image","setImage","useEffect","get","request","data","results","fetchData","console","log","className","map","movie","onClick","backdrop_path","handleClick","src","poster_path","alt","name","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Navbar","logo","Rows","Requests","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.233d6106.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nfunction Login() {\n    return (\n        <div>\n        <form>\n        <div>\n            <div id=\"container\">\n                <label for= \"username\">Username</label>\n                <input type=\"text\" placeholder='Enter Username'/>\n\n                <label type=\"password\">Password</label>\n                <input for=\"password\" placeholder='Enter Password'/>\n\n                <button type=\"submit\">Login</button>\n            </div>\n        </div>\n        </form>\n        </div>\n    )\n}\n\nexport default Login;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL:\"https://api.themoviedb.org/3\",\n})\nexport default instance;","import { render } from '@testing-library/react';\nimport React, {useState, useEffect} from 'react';\nimport axios from \"./axios\";\nimport \"./Css/Row.css\";\n\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row({ title, fetchURL, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [image, setImage] = useState(undefined);\n\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(fetchURL);\n            setMovies(request.data.results);\n            setImage(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchURL]);\n\n    console.log(movies);\n\n    function handleClick(movie){\n        if (image){\n            setImage(\"\");\n        } else {\n            setImage(movie.backdrop_path)\n        }\n    }\n\n    return (\n        <div className = \"row\">\n            <h2 className=\"title\">{title}</h2>\n            <div className = \"row-posters\">\n                {movies.map((movie) =>  (\n                    <img \n                    className={`row-poster ${isLargeRow && \"row-posterLarge\"}`} \n                    key={movie.id}\n                    onClick = {()=> handleClick(movie)}\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                    alt={movie.name}/>\n                ))};\n            </div>\n           {image && <img src={`${base_url}${image}`} className=\"rendered-image\"/>}\n        </div>\n    )\n}\n\nexport default Row;\n","const API_KEY = \"dacb96456d3b4514dbf996d4adca1809\";\n\nconst requests = {\nfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\nfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\nfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\nfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\nfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\nfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\nfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\nfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, {useState, useEffect} from 'react'\nimport axios from './axios'\nimport requests from './Requests';\nimport './Css/Banner.css'\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[\n                Math.floor(Math.random() * request.data.results.length-1)\n            ]);\n            return request;\n    }\n    fetchData();\n}, []);\n\nconsole.log(movie)\n\nfunction truncate(str, n) {\n    return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n}\n\n\n    return (\n        <header className=\"banner\"\n            style={{\n                backgroundSize:\"cover\",\n                backgroundImage: `url(\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n                )`,\n                backgroundPosition: \"center center\"\n            }}\n        >\n            <div className=\"banner_contents\">\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n                <div>\n                    <button className=\"banner_buttons\">Play</button>\n                    <button className=\"banner_buttons\">My List</button>\n                </div>\n\n                <h1 className=\"Banner_description\">\n                    {truncate(movie?.overview, 150)}\n                </h1>\n            </div>\n            <div className=\"transition-barrier\"/>\n        </header>\n    )\n}\n\nexport default Banner;\n","export default __webpack_public_path__ + \"static/media/notflix-img.8891e91e.jpg\";","import React from 'react'\nimport logo from \"./Imgs/notflix-img.jpg\"\nimport \"./Css/Navbar.css\"\n\nfunction Navbar() {\n    return (\n        <div className=\"navbar\">\n            <img\n                className=\"nav-logo\"\n                src={logo}\n            />\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport logo from './logo.svg';\nimport './Css/App.css';\nimport Row from './Row';\nimport Requests from './Requests';\nimport Banner from './Banner';\nimport Navbar from './Navbar';\n\nfunction Rows() {\n    return (\n        <div>\n            <Navbar/>\n            <Banner/>  \n            <h1 className=\"heading\">Netflix App recreation</h1>\n            <Row title= \"Trending now\" \n            fetchURL={Requests.fetchTrending} \n            isLargeRow={true}/>\n            <Row title=\"Netflix Originals\" fetchURL={Requests.fetchNetflixOriginals}/>\n            <Row title=\"Top Rated\" fetchURL={Requests.fetchTopRated}/>\n            <Row title=\"Action Movies\" fetchURL={Requests.fetchActionMovies}/>\n            <Row title=\"Comedy Movies\" fetchURL={Requests.fetchComedyMovies}/>\n            <Row title=\"Horror Movies\" fetchURL={Requests.fetchHorrorMovies}/>\n            <Row title=\"Romance Movies\" fetchURL={Requests.fetchRomanceMovies}/>\n            <Row title=\"Romance Movies\" fetchURL={Requests.fetchDocumentaries}/>\n        </div>\n    )\n}\n\nexport default Rows\n","import React from 'react';\nimport {BrowserRouter as Router, Routes, Link, Route,  Redirect} from \"react-router-dom\"\nimport Login from './login/login';\nimport Rows from './Rows'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Rows/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}